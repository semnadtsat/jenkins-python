# This is a basic workflow to help you get started with Actions
name: Python Run

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: ENVs
      #   run: echo "DOCKER_REGISTRY=${{ vars.DOCKER_REGISTRY }}" > .env

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pwd
          ls -la
          git rev-parse --short HEAD

      - name: Get Commit Hash
        run: echo "COMMIT_HASH=skate" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: Run python
        run: python3 helloworld.py
      
      # Build & Push image to registry
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build image
        run: docker build -t ${{ vars.DOCKER_REGISTRY }}/fla:${COMMIT_HASH} .
      
      - name: Push
        run: docker push ${{ vars.DOCKER_REGISTRY }}/fla:${COMMIT_HASH}

      - name: SSH test
        run: |
          ssh -p ${{ secrets.SSH_PORT_DEVMANAGER }} ${{ secrets.SSH_USER_DEVMANAGER }}@${{ secrets.SSH_HOST_DEVMANAGER }} << 'EOF'
          docker ps && echo ${{ vars.TEST_VAR }}
          export COMMIT_HASH=${{ env.COMMIT_HASH }}
          echo "OK"
          EOF

      - name: Docker Login
        run: ssh -p ${{ secrets.SSH_PORT_DEVMANAGER }} ${{ secrets.SSH_USER_DEVMANAGER }}@${{ secrets.SSH_HOST_DEVMANAGER }} "echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ vars.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_REGISTRY_USER }} --password-stdin"

      - name: Container Deploy
        run: ssh -p ${{ secrets.SSH_PORT_DEVMANAGER }} ${{ secrets.SSH_USER_DEVMANAGER }}@${{ secrets.SSH_HOST_DEVMANAGER }} "docker stop python-flask ; docker rm python-flask ; docker pull ${{ vars.DOCKER_REGISTRY }}/fla:latest ; docker run -dit --name python-flask -p 4090:4090 ${{ vars.DOCKER_REGISTRY }}/fla:latest"